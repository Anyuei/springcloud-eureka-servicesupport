<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!--被评论对象表DDL
CREATE TABLE `object` (
  `objectID` bigint(11) NOT NULL COMMENT '对象ID',
  `objectName` varchar(255) NOT NULL COMMENT '对象名称',
  `details` text NOT NULL COMMENT '被评论对象的介绍',
  `dislikes` varchar(255) NOT NULL COMMENT '不喜欢的人数',
  `likes` varchar(255) NOT NULL COMMENT '喜欢的人数',
  `viewTimes` varchar(255) NOT NULL COMMENT '被浏览次数',
  `commentsTimes` varchar(255) NOT NULL COMMENT '被评论数',
  `categoryID` bigint(11) NOT NULL COMMENT '所属种类',
  `createUser` varchar(255) NOT NULL COMMENT '对象创建者信息',
  `createTime` datetime NOT NULL COMMENT '对象创建时间',
  `state` int(11) NOT NULL COMMENT '对象状态(0-正常 1-审核 2-封禁)',
  `objectPicturePath` varchar(255) NOT NULL COMMENT '被评论对象图片路径',
  PRIMARY KEY (`objectID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-->
<mapper namespace="com.yun.dao.ItemDao">
	<!--新增对象 测试通过 2019.4.2 -->
	<insert id="insertItem" parameterType="Item" useGeneratedKeys="true" keyProperty="objectID">
		INSERT INTO object(
                objectName,
                details,
                dislikes,
                likes,
                viewTimes,
                commentsTimes,
                categoryID,
                createUser,
                createTime,
                state,
                objectPicturePath,
                brief_introduction
                )
	    VALUES(
                      #{objectName},
                      #{details},
                      #{dislikes},
                      #{likes},
                      #{viewTimes},
                      #{commentsTimes},
                      #{categoryID},
                      #{createUser},
                      #{createTime},
                      #{state},
                      #{objectPicturePath},
                      #{brief_introduction}
                      )
	</insert>
	<!--根据对象ID删除对象 测试通过 2019.4.2 -->
	<delete id="deleteItemByID">
	    DELETE FROM object WHERE objectID=#{objectID}
	</delete>
	<!--根据所属分类ID删除所有对象 测试通过 2019.4.2 -->
	<delete id="deleteItemsByCategoryID">
		DELETE FROM object WHERE categoryID=#{categoryID}
	</delete>
	<!--修改对象信息 测试通过 2019.4.2 -->
	<update id="updateItemByID" >
	    UPDATE
		object
	    SET
        <if test="objectName != null">objectName=#{objectName},</if>
        <if test="details != null">details=#{details},</if>
        <if test="dislikes != null">dislikes=#{dislikes},</if>
        <if test="likes != null">likes=#{likes},</if>
        <if test="viewTimes != null">viewTimes=#{viewTimes},</if>
        <if test="commentsTimes != null">commentsTimes=#{commentsTimes},</if>
        <if test="categoryID != null">categoryID=#{categoryID},</if>
        <if test="createUser != null">createUser=#{createUser},</if>
		<if test="createTime != null">createTime=#{createTime},</if>
		<if test="state != null">state=#{state},</if>
		<if test="objectPicturePath != null">objectPicturePath=#{objectPicturePath},</if>
        <if test="brief_introduction != null">brief_introduction=#{brief_introduction}</if>
	    WHERE userID=#{userID}
	</update>

    <!--根据ID查询对象 测试通过 2019.4.2 -->
	<select id="retrieveItemByID" resultType="Item" parameterType="java.lang.Long">
		SELECT * FROM object WHERE objectID = #{objectID}
	</select>

	<!-- 根据某类目下的所有对象 测试通过 2019.3.25-->
	<select id="retrieveItemsByCategoryID" resultType="Item">
		SELECT * FROM object WHERE categoryID = #{categoryID}
	</select>

	<!-- 根据对象的所属类目，查询处于某状态对象的信息。 测试通过 2019.4.2-->
	<select id="retrieveItemsInStateByCategoryID" resultType="Item" parameterType="java.lang.String">
		SELECT * FROM object WHERE objectName =  #{0} and state = #{1}
	</select>
</mapper>























